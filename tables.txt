-- Drop existing tables (optional)
DROP TABLE IF EXISTS payment_details CASCADE;
DROP TABLE IF EXISTS dispatches CASCADE;
DROP TABLE IF EXISTS driver_details CASCADE;
DROP TABLE IF EXISTS vehicle_details CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS quote_items CASCADE;
DROP TABLE IF EXISTS quotes CASCADE;
DROP TABLE IF EXISTS rice_details CASCADE;
DROP TABLE IF EXISTS address_details CASCADE;
DROP TABLE IF EXISTS contact_details CASCADE;
DROP TABLE IF EXISTS sales_person CASCADE;

-- ===========================
-- 1. Sales Person
-- ===========================
CREATE SEQUENCE sales_person_user_id_seq START 1000;

CREATE TABLE sales_person (
    user_id INTEGER DEFAULT nextval('sales_person_user_id_seq'),
    name VARCHAR(30),
    email_id VARCHAR(30) UNIQUE,
    password TEXT,
    PRIMARY KEY (user_id)
);

ALTER SEQUENCE sales_person_user_id_seq OWNED BY sales_person.user_id;

-- ===========================
-- 2. Contact Details
-- ===========================
CREATE TABLE contact_details (
    user_id INTEGER REFERENCES sales_person (user_id) ON DELETE CASCADE,
    contact_number CHAR(10) CHECK (length(contact_number) = 10),
    PRIMARY KEY (user_id, contact_number)       
);

-- ===========================
-- 3. Address Details
-- ===========================
CREATE TABLE address_details (
    address_id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES sales_person (user_id) ON DELETE CASCADE,
    street VARCHAR(60),
    city VARCHAR(20),
    pincode CHAR(6) CHECK (length(pincode) = 6)     
);

-- ===========================
-- 4. Rice Details
-- ===========================
CREATE TABLE rice_details (
    rice_id INTEGER PRIMARY KEY,
    rice_name VARCHAR(30),
    description TEXT,
    stock_available NUMERIC(6,2),
    last_changed_date TIMESTAMP WITHOUT TIME ZONE,
    min_price NUMERIC(7,2),
    max_price NUMERIC(7,2),
    img_path TEXT
);

-- ===========================
-- 5. Quotes
-- ===========================
CREATE SEQUENCE quotes_quote_number_seq START 5000;

CREATE TABLE quotes (
    quote_number INTEGER DEFAULT nextval('quotes_quote_number_seq'),
    sales_person_id INTEGER NOT NULL REFERENCES sales_person (user_id),
    status VARCHAR(10) CHECK (
        status IN ('Approved', 'Pending', 'Rejected')
    ),
    PRIMARY KEY (quote_number)
);

ALTER SEQUENCE quotes_quote_number_seq OWNED BY quotes.quote_number;

-- ===========================
-- 6. Quote Items
-- ===========================
CREATE TABLE quote_items (
    quote_number INTEGER REFERENCES quotes (quote_number),
    rice_id INTEGER REFERENCES rice_details (rice_id),
    quoted_price NUMERIC(7,2),
    quantity NUMERIC(6,2),
    PRIMARY KEY (quote_number, rice_id)   
);

-- ===========================
-- 7. Orders
-- ===========================
CREATE SEQUENCE orders_order_id_seq START 100000000000000;

CREATE TABLE orders (
    order_id BIGINT DEFAULT nextval('orders_order_id_seq'),
    quote_number INTEGER REFERENCES quotes (quote_number),
    total_price NUMERIC(10,2),
    status VARCHAR(15) CHECK (
        status IN ('Waiting', 'Paid', 'Allocated', 'Delivered')
    ),
    order_date DATE,
    address_id INTEGER NOT NULL REFERENCES address_details (address_id),
    PRIMARY KEY (order_id)
);

ALTER SEQUENCE orders_order_id_seq OWNED BY orders.order_id;

-- ===========================
-- 8. Vehicle Details
-- ===========================
CREATE TABLE vehicle_details (
    vehicle_number CHAR(10) PRIMARY KEY,
    vehicle_type VARCHAR(20),
    capacity INTEGER,
    last_service_date DATE,
    status VARCHAR(15) DEFAULT 'Free',
    CONSTRAINT vehicle_details_vehicle_number_check CHECK (
        length(vehicle_number) IN (8, 9, 10)
    ),
    CONSTRAINT vehicle_details_status_check CHECK (
        status IN ('Free', 'InTransit', 'Maintenance')
    )
);

-- ===========================
-- 9. Driver Details
-- ===========================
CREATE TABLE driver_details (
    driver_id INTEGER PRIMARY KEY,
    driver_name VARCHAR(20),
    contact_number CHAR(10) CHECK (length(contact_number) = 10),
    status VARCHAR(15) DEFAULT 'Free',
    CONSTRAINT driver_details_status_check CHECK (
        status IN ('Free', 'InWork', 'NotAvailable')
    )
);

-- ===========================
-- 10. Dispatches
-- ===========================
CREATE TABLE dispatches (
    order_id BIGINT PRIMARY KEY,
    vehicle_number CHAR(10) NOT NULL REFERENCES vehicle_details (vehicle_number),
    driver_id INTEGER NOT NULL REFERENCES driver_details (driver_id),
    start_date DATE,
    delivery_date DATE       
);

-- ===========================
-- 11. Payment Details
-- ===========================
CREATE SEQUENCE payment_details_payment_id_seq START 10000;

CREATE TABLE payment_details (
    payment_id INTEGER DEFAULT nextval('payment_details_payment_id_seq'),
    order_id BIGINT NOT NULL REFERENCES orders (order_id),
    amount NUMERIC(10,2),
    pay_date TIMESTAMP WITHOUT TIME ZONE,
    PRIMARY KEY (payment_id)
);

ALTER SEQUENCE payment_details_payment_id_seq OWNED BY payment_details.payment_id;